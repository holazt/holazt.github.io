name: Deploy Hugo site to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: ['main']

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    # env:
    #   HUGO_VERSION: '0.122.0'
    steps:
      - name: Install Hugo CLI
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.122.0'
          extended: true

      # - name: Install Hugo CLI
      #   run: |
      #     wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
      #     && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # # The extended edition is not required to use the Dart Sass transpiler.
      # - name: Install Dart Sass
      #   run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # - name: Install Node.js dependencies
      #   run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      
      # - name: Build
      #   run: hugo --minify -e production

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
